{"name":"Shortcode-popups","tagline":"WordPress shortcode popups class, which simplifies popup creation.","body":"### WordPress shortcode popups generator.\r\nWordPress shortcode popups generator is a PHP class, which facilitates creation of WordPress dynamic popup windows. This should help the developers out in creation of a well thught user interface for a more complex shortcodes having several fields. Generally manual management of shortcodes is quite cumbersome, our class aims to sort that issue out.\r\n\r\n### Basic Usage\r\n\r\n1. First instantiate the class\r\n\r\n`$shortcodes = new WP_Doin_Shortcodes_Generator();`\r\n\r\n2. Add a shortcode\r\n\r\n`$test = $shortcodes->add_shortcode( 'acfrpw', 'ACFRPW', 'Choose from a list of settings to create the acfrpw shortocde. Any content (shortcodes as well) can be placed in the textareas.' );`\r\n\r\n3. Add some fields\r\n\r\n`$test->add_field( 'text', 'css', __( 'CSS Class', 'acf_rpw' ) );`\r\n\r\n4. Generate the shortcode\r\n\r\n`$shortcodes->generate();`\r\n\r\nYou'll end up with a popup window that would place the following shortcode for you:\r\n\r\n`[acfrpw css=\"the text you specified\"]`\r\n\r\n### Available fields\r\n\r\nCurrently there are 5 available fields to specify. The second argument of each add_field method needs to be different, as the values are stored as keys of the associative array. All of the fields take from 3 to 5 arguments, the first one denotes the type of the field used, the second one, a uniqe name of the field. The third one a heading of the element, which should describe the element, the fourth one a description, which describes the element in detail and the fift one, used for the select and checkbox fields is an array of key -> value pair used for the values and names of select options and checkbox fields.\r\n\r\n* Column field \r\nThe column field is used to divide the viewport to 1/3. Each column should have a 'start' and 'end' elements, placed respectively before and after all other column fields\r\n\r\n`->add_field( 'col', 'fcs', 'start' )`\r\n\r\n* Text field\r\n\r\nThe text field takes 3 to 4 arguments, the first one denotes the type of the field (text), the second one its unique name, the third one its heading and the foruth one an optional description.\r\n\r\n`->add_field( 'text', 'css', __( 'CSS Class', 'acf_rpw' ) )`\r\n\r\n* Select field\r\n\r\nThe select field takes 5 arguments, the first one denotes the type of the field (select), the second one its unique name, the third one its heading, the fourth one a description (input empty string for none) and the fifth its key -> value pairs.\r\n\r\n`>add_field( 'select', 'ord', __( 'Order', 'acf_rpw' ), '', array( 'ASC' => __( 'Ascending', 'acf_rpw' ), 'DESC' => __( 'Descending', 'acf_rpw' ) ) )` \r\n\r\nSee the source code for more information.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}